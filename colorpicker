<template>
<div>
    <color-picker v-model="color" @input="onInput"></color-picker>
    <!-- <color-picker v-bind="color" @input="onInput"></color-picker> -->
    <!-- <h1 v-text="msg"></h1> -->


    <pre v-html="color"></pre>
</div>
</template>

<script>
import ColorPicker from '@radial-color-picker/vue-color-picker';

export default {
    components: { ColorPicker },
    data() {
        return {
            msg: '',
            color: {
                hue: 50,
                saturation: 100,
                luminosity: 50,
                alpha: 1
            },
        };
    }
    ,
    methods: {
        onInput: function(hue) {
            this.color.hue = hue;
            // this.msg=hue;
            // console.log(hue)
        }
    }
};
</script>

<style>
@import '~@radial-color-picker/vue-color-picker/dist/vue-color-picker.min.css';
</style>






<template>
  
  <div>
    <color-picker v-bind="color" @input="onInput"></color-picker>
    <h1 v-text="msg"></h1>
    <!-- <pre v-html="color"></pre> -->
</div>

  <!-- <div>
    <color-picker v-model="color" @input="onInput"></color-picker>
    <color-picker v-bind="color" @input="onInput"></color-picker>
    <h1 v-text="msg"></h1>

    <pre v-html="color"></pre>
  </div> -->
</template>

<script>
import ColorPicker from "@radial-color-picker/vue-color-picker";

export default {
  components: { ColorPicker },
  data() {
    return {
      msg: "",
      color: {
        hue: 50,
        saturation: 100,
        luminosity: 50,
        alpha: 1
      }
    };
  },
  methods: {
    onInput: function(hue) {
      this.color.hue = hue;
    //   this.msg=hue;
    //   console.log(hue)
    }
  }
};
</script>

<style>
@import "~@radial-color-picker/vue-color-picker/dist/vue-color-picker.min.css";
#app {
  font-family: "Avenir", Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #2c3e50;
  margin-top: 40px;
}

h1 {
  font-weight: normal;
}

pre {
  min-width: 275px;
  padding: 15px 30px;
  background: #f8f8f8;
  color: #525252;
  font-size: 15px;
  font-weight: bold;
  line-height: 1.6;
  margin: 0;
}

@media (max-width: 420px) {
  h1 {
    font-size: 1.4em;
  }
}
</style>





//converts to rgb

HSLToRGB(h,s,l){
// Must be fractions of 1
  s /=100;
  l /=100;
 
let c =(1-Math.abs(2* l -1))* s,
      x = c *(1-Math.abs((h /60)%2-1)),
      m = l - c/2,
      r =0,
      g =0,
      b =0;
 
if(0<= h && h <60){
    r = c; g = x; b =0;
}elseif(60<= h && h <120){
    r = x; g = c; b =0;
}elseif(120<= h && h <180){
    r =0; g = c; b = x;
}elseif(180<= h && h <240){
    r =0; g = x; b = c;
}elseif(240<= h && h <300){
    r = x; g =0; b = c;
}elseif(300<= h && h <360){
    r = c; g =0; b = x;
}
  r =Math.round((r + m)*255);
  g =Math.round((g + m)*255);
  b =Math.round((b + m)*255);
 
return"("+ r +","+ g +","+ b +")";
}